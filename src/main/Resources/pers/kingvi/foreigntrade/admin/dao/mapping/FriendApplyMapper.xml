<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.kingvi.foreigntrade.admin.dao.FriendApplyMapper" >
  <resultMap id="BaseResultMap" type="pers.kingvi.foreigntrade.po.FriendApply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sender_id" property="senderId" jdbcType="BIGINT" />
    <result column="receiver_id" property="receiverId" jdbcType="BIGINT" />
    <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sender_id, receiver_id, sender_name, send_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pers.kingvi.foreigntrade.po.FriendApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friend_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from friend_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectFriendApply" parameterType="FriendApply" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend_apply
        where sender_id = #{senderId,jdbcType=BIGINT} and receiver_id = #{receiverId,jdbcType=BIGINT}
        or sender_id = #{receiverId,jdbcType=BIGINT} and receiver_id = #{senderId,jdbcType=BIGINT}
    </select>
    <select id="selectByReceiverId" parameterType="long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend_apply
        where receiver_id = #{receiverId,jdbcType=BIGINT} order by sender_id
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from friend_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteFriend">
    delete from friend_apply
    where sender_id = #{senderId,jdbcType=BIGINT} and receiver_id = #{receiverId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="pers.kingvi.foreigntrade.po.FriendApplyExample" >
    delete from friend_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.kingvi.foreigntrade.po.FriendApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into friend_apply (sender_id, receiver_id, sender_name, send_time)
    values (#{senderId,jdbcType=BIGINT}, #{receiverId,jdbcType=BIGINT}, #{senderName,jdbcType=VARCHAR},
      #{sendTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="pers.kingvi.foreigntrade.po.FriendApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into friend_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="senderName != null" >
        sender_name,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="senderId != null" >
        #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="senderName != null" >
        #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.kingvi.foreigntrade.po.FriendApplyExample" resultType="java.lang.Integer" >
    select count(*) from friend_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update friend_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=BIGINT},
      </if>
      <if test="record.receiverId != null" >
        receiver_id = #{record.receiverId,jdbcType=BIGINT},
      </if>
      <if test="record.senderName != null" >
        sender_name = #{record.senderName,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update friend_apply
    set id = #{record.id,jdbcType=INTEGER},
        sender_id = #{record.senderId,jdbcType=BIGINT},
        receiver_id = #{record.receiverId,jdbcType=BIGINT},
        sender_name = #{record.senderName,jdbcType=VARCHAR},
        send_time = #{record.sendTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.kingvi.foreigntrade.po.FriendApply" >
    update friend_apply
    <set >
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="senderName != null" >
        sender_name = #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.kingvi.foreigntrade.po.FriendApply" >
    update friend_apply
    set sender_id = #{senderId,jdbcType=BIGINT},
      receiver_id = #{receiverId,jdbcType=BIGINT},
      sender_name = #{senderName,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="pers.kingvi.foreigntrade.po.FriendApplyExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friend_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>